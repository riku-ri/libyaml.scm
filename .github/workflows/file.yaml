on:
  push:
permissions:
  contents: write
  pull-requests: write
#env:
#  GITHUB_CONTEX: ${{ toJson(github) }}
jobs:
  file:
    runs-on: ubuntu-latest #public
    steps:
    - uses: actions/checkout@main
      with:
        submodules: recursive
    - run: sudo apt update && sudo apt install -y clang libclang-dev autoconf m4 jq curl gh
    #- run: find /usr/lib/llvm-* -type d -name clang-c
    #- run: find /usr/lib/llvm-* -name libclang.so
    - name: foreign.scm
      run: |
        find /usr/lib/llvm-* -type d -name clang-c -exec ln -sfT {}/.. ./usr \;
        find /usr/lib/llvm-* -name libclang.so -exec ln -sf {} ./lib/. \;
        clang -o foreign -I./usr/. -L./lib/. -lclang 2src/foreign.c
        ./foreign 2src/yaml.h 1>include/foreign.scm
    - name: config.h
      run: ./bootstrap && ./configure
      working-directory: ./src/libyaml
    - run: mv ./src/libyaml/include/config.h ./include/.
    - name: static libyaml.egg
      if: 'github.event.repository.fork'
      run: |
        ./2src/m42egg.sh \
          -Dm4_author="riku-ri" \
          -Dm4_license="MIT" \
        <.libyaml.egg.m4 | tee libyaml.egg
        test -s libyaml.egg
    - name: libyaml.egg
      if: '!github.event.repository.fork'
      run: |
        ./2src/m42egg.sh \
          -Dm4_author="${{ github.repository_owner }}" \
          -Dm4_license=${{ github.event.repository.license.spdx_id }} \
        <.libyaml.egg.m4 | tee libyaml.egg
        test -s libyaml.egg
    - name: LICENSE
      if: '!github.event.repository.fork'
      run: |
        m4 -P \
          -Dm4_year="$(date +%Y)" \
          -Dm4_name="${{ github.repository_owner }}" \
        <.LICENSE.m4 | tee LICENSE
        test -s LICENSE
    - name: libyaml.release-info
      run: |
        m4 -P \
          -Dm4_release="$(curl -L https://api.github.com/repos/riku-ri/libyaml.scm/releases | jq '.[].name' | xargs -n1 cut -b2- | xargs -I__ echo "(release \"__\")")" \
        <.libyaml.release-info.m4 | tee libyaml.release-info
        test -s libyaml.release-info
    - run: |
        git config user.name "run#${{ github.run_id }}"
        git config user.email "run#${{ github.run_id }}@action.github.com"
        git add include/foreign.scm
        git add include/config.h
        git add libyaml.egg
        git add LICENSE
        git add libyaml.release-info
    - run: git status
    - run: git diff HEAD
    - run: git diff-index HEAD
    - run: git diff-index --quiet HEAD
      id: diff
      continue-on-error: true
    - name: gh auth login
      run: |
        test -n "${{ secrets.GITHUB_TOKEN }}"
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login -p https --with-token
    - name: push
      if: steps.diff.outcome != 'success'
      run: |
        git commit -m "[auto][github action][run#${{ github.run_id }}]"
        git switch -c "run/${{ github.run_id }}"
        git push -u origin $(git branch --show-current)
    - name: gh pr
      if: steps.diff.outcome != 'success'
      run: |
        gh pr new -B main -b '' -t "[auto][github action][run#${{ github.run_id }}]"
        gh pr merge -d --auto -s
    - run: gh auth logout
      if: always()
      continue-on-error: true
