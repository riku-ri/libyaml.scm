(define (&in-yaml-map? == mapping key)
	(if (not (procedure? mapping))
		(error "try to find a key in a non mapping object" mapping))
	(let ((mapping (mapping)))
		(if (not (list mapping))
			(error "try to find a key in a non mapping object" mapping))
		(define (:&in-yaml-map? mapping)
			(cond
				((null? mapping) #f)
				((not (pair? (car mapping))) (:&in-yaml-map? (cdr mapping)))
				((== (car (car mapping)) key) (car mapping))
				(else (:&in-yaml-map? (cdr mapping)))))
		(:&in-yaml-map? mapping)))
(define (in-yaml-map? mapping key) (&in-yaml-map? equal? mapping key))
(define (in-yaml-map?? mapping key) (&in-yaml-map? eqv? mapping key))
(define (in-yaml-map??? mapping key) (&in-yaml-map? eq? mapping key))
